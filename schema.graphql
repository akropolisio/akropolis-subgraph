###############
### SAVINGS ###
###############

type SavingsPool @entity {
  "address"
  id: ID!
  poolToken: PoolToken!
  tokens: [Token!]!
  rewardTokens: [Token!]!
  apr: SPoolApr!
  prevBalance: SPoolBalance!
  balance: SPoolBalance!
  lastRewardDistributionDate: BigInt!
  prevRewardDistributionDate: BigInt!

  rewards: [SReward!]! @derivedFrom(field: "pool")
  aprHistory: [SPoolApr!]! @derivedFrom(field: "pool")
  balanceHistory: [SPoolBalance!]! @derivedFrom(field: "pool")
  users: [User!]! @derivedFrom(field: "savingsPools")
  distributions: [SPoolYieldDistribution!]! @derivedFrom(field: "pool")
}

type SReward @entity {
  id: ID!
  pool: SavingsPool!
  duration: BigInt!
  poolBalance: SPoolBalance!
  token: Token!
  amount: BigInt!
  date: BigInt!
}

type SPoolApr @entity {
  id: ID!
  amount: BigInt!
  date: BigInt!
  duration: BigInt!
  pool: SavingsPool!
  txHash: Bytes!
}

type SPoolBalance @entity {
  id: ID!
  amount: BigInt!
  date: BigInt!
  pool: SavingsPool!
}

type SPoolYieldDistribution @entity {
  id: ID!
  pool: SavingsPool!
  amount: BigInt!
}

#####################
### VAULT SAVINGS ###
#####################

type VaultPool @entity {
  "address"
  id: ID!
  poolToken: PoolToken!
  underlyingToken: Token!
  controller: VaultController!
  strategy: VaultStrategy!
  totalTVL: BigInt!

  users: [User!]! @derivedFrom(field: "vaultPools")
}

type VaultStrategy @entity {
  "address"
  id: ID!
  withdrawFee: BigInt!
  withdrawFeeDenominator: BigInt!
}

type VaultController @entity {
  "address"
  id: ID!
  vaults: [VaultPool!]! @derivedFrom(field: "controller")
}

#############
### OTHER ###
#############

type User @entity {
  "address"
  id: ID!

  tvl: [UserVaultTVL!]! @derivedFrom(field: "user")
  savingsPools: [SavingsPool!]!
  vaultPools: [VaultPool!]!
  stakingPools: [String!]!
}

type UserVaultTVL @entity {
  "vaultAddress + userAddress"
  id: ID!
  amount: BigInt!
  vault: VaultPool!
  user: User!
}

type Token @entity {
  "address"
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type PoolToken @entity {
  "address"
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
  savingsPool: SavingsPool
  vaultPool: VaultPool
}

type GlobalStat @entity {
  id: ID!
  activeMembersCount: Int!
  totalYieldEarned: BigInt!
}

type SubgraphConfig @entity {
  id: ID!
  aprDecimals: Int!
}

enum SingleEntityID {
  ID
}
