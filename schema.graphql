###############
### STAKING ###
###############

type StakingPool @entity {
  "address"
  id: ID!
  depositToken: Token!
  usersCount: Int!

  users: [User!]! @derivedFrom(field: "stakingPools")
}

##############
### VAULTS ###
##############

type Vault @entity {
  "address"
  id: ID!
  isActive: Boolean!
  lpToken: Token!
  depositToken: Token!
  totalTVL: BigInt!
  createdAt: BigInt!

  users: [User!]! @derivedFrom(field: "vaults")
}

type BasisVault @entity {
  "address"
  id: ID!
  isActive: Boolean!

  users: [User!]! @derivedFrom(field: "basisVaults")
}

############
### USER ###
############

type User @entity {
  "address"
  id: ID!
  active: Boolean!

  stakingPools: [StakingPool!]!
  vaults: [Vault!]!
  basisVaults: [BasisVault!]!

  depositedBalances: [DepositedBalance!]! @derivedFrom(field: "user")
}

type DepositedBalance @entity {
  "user address + pool address"
  id: ID!
  value: BigInt!
  user: User!
  pool: Bytes!
}

#############
### OTHER ###
#############

type Token @entity {
  "address"
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type GlobalStat @entity {
  id: ID!
  activeMembersCount: Int!
  totalYieldEarned: BigInt!
}

type SubgraphConfig @entity {
  id: ID!
  aprDecimals: Int!
}

enum SingleEntityID {
  ID
}
