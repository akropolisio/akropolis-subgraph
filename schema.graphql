###############
### SAVINGS ###
###############

type SavingsPool @entity {
  "address"
  id: ID!
  poolToken: PoolToken!
  tokens: [Token!]!
  rewardTokens: [Token!]!
  apr: SPoolApr!
  prevBalance: SPoolBalance!
  balance: SPoolBalance!
  lastRewardDistributionDate: BigInt!
  prevRewardDistributionDate: BigInt!

  rewards: [SReward!]! @derivedFrom(field: "pool")
  aprHistory: [SPoolApr!]! @derivedFrom(field: "pool")
  balanceHistory: [SPoolBalance!]! @derivedFrom(field: "pool")
  users: [User!]! @derivedFrom(field: "savingsPools")
  distributions: [SPoolYieldDistribution!]! @derivedFrom(field: "pool")
}

type SReward @entity {
  id: ID!
  pool: SavingsPool!
  duration: BigInt!
  poolBalance: SPoolBalance!
  token: Token!
  amount: BigInt!
  date: BigInt!
}

type SPoolApr @entity {
  id: ID!
  amount: BigInt!
  date: BigInt!
  duration: BigInt!
  pool: SavingsPool!
  txHash: Bytes!
}

type SPoolBalance @entity {
  id: ID!
  amount: BigInt!
  date: BigInt!
  pool: SavingsPool!
}

type SPoolYieldDistribution @entity {
  id: ID!
  pool: SavingsPool!
  amount: BigInt!
}

########################
### VAULT SAVINGS V1 ###
########################

type VaultPoolV1 @entity {
  "address"
  id: ID!
  poolToken: PoolToken!
  underlyingToken: Token!
  controller: VaultControllerV1!
  strategy: VaultStrategyV1!
  totalTVL: BigInt!

  users: [User!]! @derivedFrom(field: "vaultPoolsV1")
  userV1TVLs: [UserVaultV1TVL!]! @derivedFrom(field: "vault")
}

type VaultStrategyV1 @entity {
  "address"
  id: ID!
  withdrawFee: BigInt!
  withdrawFeeDenominator: BigInt!
}

type VaultControllerV1 @entity {
  "address"
  id: ID!
  vaults: [VaultPoolV1!]! @derivedFrom(field: "controller")
}

########################
### VAULT SAVINGS V2 ###
########################

type VaultPoolV2 @entity {
  "address"
  id: ID!
  poolToken: PoolToken!
  underlyingToken: Token!
  totalTVL: BigInt!

  users: [User!]! @derivedFrom(field: "vaultPoolsV2")
  userV2TVLs: [UserVaultV2TVL!]! @derivedFrom(field: "vault")
}

############
### USER ###
############

type User @entity {
  "address"
  id: ID!

  savingsPools: [SavingsPool!]!
  vaultPoolsV1: [VaultPoolV1!]!
  vaultPoolsV2: [VaultPoolV2!]!
  stakingPools: [String!]!

  vaultV1TVLs: [UserVaultV1TVL!]! @derivedFrom(field: "user")
  vaultV2TVLs: [UserVaultV2TVL!]! @derivedFrom(field: "user")
}

type UserVaultV1TVL @entity {
  "vaultAddress + userAddress"
  id: ID!
  amount: BigInt!
  vault: VaultPoolV1!
  user: User!
}

type UserVaultV1TVLChanged @entity {
  "address"
  id: ID!
  amount: BigInt!
  blockNumber: BigInt!
  vault: VaultPoolV1!
  user: User!
  "increase | decrease"
  eventType: String!
}

type UserVaultV2TVL @entity {
  "vaultAddress + userAddress"
  id: ID!
  amount: BigInt!
  vault: VaultPoolV2!
  user: User!
}

type UserVaultV2TVLChanged @entity {
  "address"
  id: ID!
  amount: BigInt!
  blockNumber: BigInt!
  vault: VaultPoolV2!
  user: User!
  "increase | decrease"
  eventType: String!
}

#############
### OTHER ###
#############

type Token @entity {
  "address"
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type PoolToken @entity {
  "address"
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
  savingsPool: SavingsPool
  vaultPoolV1: VaultPoolV1
  vaultPoolV2: VaultPoolV2
}

type GlobalStat @entity {
  id: ID!
  activeMembersCount: Int!
  totalYieldEarned: BigInt!
}

type SubgraphConfig @entity {
  id: ID!
  aprDecimals: Int!
}

enum SingleEntityID {
  ID
}
